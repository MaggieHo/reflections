How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    faster to locate the changes/updates;
    instead of figuring out where the changes are, viewing a diff btw two versions of a file help us highlight the updates.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    having a history of a file can help me debug my code easily, revert back to an older version within one click... etc.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: manual commits in Git help you to logically commit and easier to find in the future
    Cons: manual commits might lose some work if the system is down or so

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In git, one commit saves all the files in the same repository. Sometimes, the changes may be related to multiple files, so thsi is pretty neat. And also if not all the files are changed in one commit, you will find those files stay the same in different versions within different commits. That's totally fine too.

How can you use the commands git log and git diff to view the history of files?

    git log
    git diff commitID1 commitID2

How might using version control make you more confident to make changes that
could break something?

    option to revert the changes: git checkout
    and git log

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
